'use client';\n\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { motion } from 'framer-motion';\nimport { \n  ClockIcon, \n  CurrencyDollarIcon, \n  BuildingOfficeIcon,\n  CalendarDaysIcon,\n  ChevronRightIcon\n} from '@heroicons/react/24/outline';\nimport { useGetTendersQuery, useLogoutMutation } from '@/store/api/vendorApi';\nimport { selectIsAuthenticated, selectUser, logout } from '@/store/slices/authSlice';\nimport { toast } from 'react-hot-toast';\n\ninterface TenderCardProps {\n  tender: any;\n  index: number;\n}\n\nfunction TenderCard({ tender, index }: TenderCardProps) {\n  const getStatusColor = (status: string) => {\n    switch (status?.toLowerCase()) {\n      case 'published':\n        return 'status-open';\n      case 'draft':\n        return 'status-pending';\n      case 'closed':\n        return 'status-closed';\n      default:\n        return 'status-pending';\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n    });\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.3, delay: index * 0.1 }}\n      className=\"card card-interactive group\"\n    >\n      <div className=\"flex flex-col h-full\">\n        {/* Header */}\n        <div className=\"flex items-start justify-between mb-4\">\n          <div className=\"flex-1\">\n            <h3 className=\"font-bold text-lg mb-2 group-hover:text-blue-600 transition-colors\">\n              {tender.title}\n            </h3>\n            <div className={`status-badge ${getStatusColor(tender.status)}`}>\n              {tender.status}\n            </div>\n          </div>\n          <ChevronRightIcon className=\"w-5 h-5 text-gray-400 group-hover:text-blue-500 transition-colors\" />\n        </div>\n\n        {/* Description */}\n        <p className=\"text-gray-600 mb-4 line-clamp-2\">\n          {tender.description}\n        </p>\n\n        {/* Details */}\n        <div className=\"space-y-3 mb-4\">\n          {tender.category && (\n            <div className=\"flex items-center space-x-2 text-sm\">\n              <BuildingOfficeIcon className=\"w-4 h-4 text-gray-400\" />\n              <span className=\"text-gray-600\">{tender.category}</span>\n            </div>\n          )}\n          \n          {tender.estimatedValue && (\n            <div className=\"flex items-center space-x-2 text-sm\">\n              <CurrencyDollarIcon className=\"w-4 h-4 text-gray-400\" />\n              <span className=\"text-gray-600\">{formatCurrency(tender.estimatedValue)}</span>\n            </div>\n          )}\n          \n          <div className=\"flex items-center space-x-2 text-sm\">\n            <CalendarDaysIcon className=\"w-4 h-4 text-gray-400\" />\n            <span className=\"text-gray-600\">\n              Closes: {formatDate(tender.closingDate)}\n            </span>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"mt-auto pt-4 border-t border-gray-100\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"text-sm text-gray-500\">\n              Created {formatDate(tender.createdAt)}\n            </div>\n            <div className=\"text-sm text-blue-600 font-medium group-hover:text-blue-700\">\n              View Details\n            </div>\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n\nexport default function VendorDashboard() {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector(selectIsAuthenticated);\n  const user = useSelector(selectUser);\n  const [logoutMutation] = useLogoutMutation();\n  \n  const {\n    data: tenders,\n    error,\n    isLoading,\n    refetch,\n  } = useGetTendersQuery({\n    status: 'published',\n    limit: 20,\n  });\n\n  useEffect(() => {\n    if (!isAuthenticated) {\n      router.push('/vendor/login');\n    }\n  }, [isAuthenticated, router]);\n\n  const handleLogout = async () => {\n    try {\n      await logoutMutation().unwrap();\n      dispatch(logout());\n      toast.success('Logged out successfully');\n      router.push('/vendor/login');\n    } catch (error) {\n      console.error('Logout error:', error);\n      // Still logout locally even if server call fails\n      dispatch(logout());\n      router.push('/vendor/login');\n    }\n  };\n\n  if (!isAuthenticated) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"w-8 h-8 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\" />\n          <p className=\"text-gray-600\">Checking authentication...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <header className=\"bg-white border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center py-6\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900\">\n                Welcome back, {user?.name || 'Vendor'}!\n              </h1>\n              <p className=\"text-gray-600 mt-1\">\n                Explore available tenders and submit your bids\n              </p>\n            </div>\n            \n            <div className=\"flex items-center space-x-4\">\n              <div className=\"text-right\">\n                <p className=\"text-sm font-medium text-gray-900\">{user?.email}</p>\n                <p className=\"text-xs text-gray-500\">Vendor Account</p>\n              </div>\n              \n              <button\n                onClick={handleLogout}\n                className=\"btn btn-secondary btn-sm\"\n              >\n                Logout\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Stats */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n          <div className=\"card\">\n            <div className=\"flex items-center\">\n              <div className=\"p-3 rounded-full bg-blue-100\">\n                <ClockIcon className=\"w-6 h-6 text-blue-600\" />\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-2xl font-bold text-gray-900\">\n                  {tenders?.length || 0}\n                </p>\n                <p className=\"text-gray-600\">Available Tenders</p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"card\">\n            <div className=\"flex items-center\">\n              <div className=\"p-3 rounded-full bg-green-100\">\n                <CurrencyDollarIcon className=\"w-6 h-6 text-green-600\" />\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-2xl font-bold text-gray-900\">0</p>\n                <p className=\"text-gray-600\">Active Bids</p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"card\">\n            <div className=\"flex items-center\">\n              <div className=\"p-3 rounded-full bg-purple-100\">\n                <BuildingOfficeIcon className=\"w-6 h-6 text-purple-600\" />\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-2xl font-bold text-gray-900\">0</p>\n                <p className=\"text-gray-600\">Won Contracts</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Tenders Section */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">Available Tenders</h2>\n            <button\n              onClick={() => refetch()}\n              className=\"btn btn-secondary btn-sm\"\n            >\n              Refresh\n            </button>\n          </div>\n\n          {/* Loading State */}\n          {isLoading && (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {[...Array(6)].map((_, i) => (\n                <div key={i} className=\"skeleton-card\" />\n              ))}\n            </div>\n          )}\n\n          {/* Error State */}\n          {error && (\n            <div className=\"text-center py-12\">\n              <div className=\"bg-red-50 border border-red-200 rounded-lg p-6 max-w-md mx-auto\">\n                <h3 className=\"text-lg font-medium text-red-800 mb-2\">\n                  Failed to load tenders\n                </h3>\n                <p className=\"text-red-600 mb-4\">\n                  {(error as any)?.data?.message || 'Please check your connection and try again.'}\n                </p>\n                <button\n                  onClick={() => refetch()}\n                  className=\"btn btn-primary btn-sm\"\n                >\n                  Try Again\n                </button>\n              </div>\n            </div>\n          )}\n\n          {/* Tenders Grid */}\n          {tenders && tenders.length > 0 && (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {tenders.map((tender, index) => (\n                <TenderCard key={tender.id} tender={tender} index={index} />\n              ))}\n            </div>\n          )}\n\n          {/* Empty State */}\n          {tenders && tenders.length === 0 && !isLoading && !error && (\n            <div className=\"text-center py-12\">\n              <BuildingOfficeIcon className=\"w-16 h-16 text-gray-300 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n                No tenders available\n              </h3>\n              <p className=\"text-gray-600\">\n                There are currently no published tenders. Check back later!\n              </p>\n            </div>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}